var documenterSearchIndex = {"docs":
[{"location":"#IndividualDisplacements.jl-1","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"","category":"section"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"IndividualDisplacements.jl computes individual displacments of elementary points over a gridded model domain. It can also read / write them from / to file. A typical application is the simulation and analysis of materials drifting or moving over the Global Ocean (e.g. plastics or planktons) or Atmosphere (e.g. dust or chemicals). Inter-operability with popular climate model grids and MeshArrays.jl is an important prospect. IndividualDisplacements.jl was initially designed in relation to MITgcm, ECCOv4 (Forget et al. 2015), and CBIOMES model simulations.","category":"page"},{"location":"#API-Guide-1","page":"IndividualDisplacements.jl","title":"API Guide","text":"","category":"section"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"","category":"page"},{"location":"#","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.jl","text":"Modules = [IndividualDisplacements]\nOrder   = [:type,:function]","category":"page"},{"location":"#IndividualDisplacements.PlotBasic-Tuple{DataFrames.DataFrame,Integer}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.PlotBasic","text":"PlotBasic(df::DataFrame,nn::Integer)\n\nPlot random subset of size nn trajectories.\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.PlotMapProj-Tuple{DataFrames.DataFrame,Integer}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.PlotMapProj","text":"PlotMapProj(df::DataFrame,nn::Integer)\n\nPlot random subset of size nn trajectories using PyPlot & basemap.\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.ReadDisplacements-Tuple{String,DataType}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.ReadDisplacements","text":"ReadDisplacements(dirIn::String,prec::DataType)\n\nRead displacements from MITgcm output file using MeshArrays and return as a DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.ReadGriddedFields-Tuple{}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.ReadGriddedFields","text":"ReadGriddedFields()\n\nRead gridded variables from file using MeshArrays and return result in uvetc Dictionary.\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.VelComp-Tuple{Any,Any,Dict,Any}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.VelComp","text":"VelComp(du,u,p::Dict,tim)\n\nInterpolate velocity from gridded fields and return position increment du\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.VelCopy-Tuple{Any,Any,DataFrames.DataFrame,Any}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.VelCopy","text":"VelCopy(du,u,p::DataFrame,t)\n\nInterpolate velocity from MITgcm float_trajectories output and return position increment du.\n\n\n\n\n\n","category":"method"},{"location":"#IndividualDisplacements.myread-Tuple{String,MeshArrays.gcmarray}","page":"IndividualDisplacements.jl","title":"IndividualDisplacements.myread","text":"myread()\n\nRead a gridded variable from 2x2 tile files. This is used in ReadGriddedFields() with flt_example/\n\n\n\n\n\n","category":"method"}]
}
